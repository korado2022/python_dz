# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод
# __init__()), который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде
# прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# 31 22     3 5 32          3 5 8 3
# 37 43     2 4 6           8 3 7 1
# 51 86     -1 64 -8
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном
# виде.
# Далее реализовать перегрузку метода __add__() для сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой
# строки первой матрицы складываем с первым элементом первой строки второй матрицы и пр.


class Matrix:
    def __init__(self, list_data):
        self.data = list_data

    def __str__(self):
        return '\n'.join([' '.join(map(str, data)) for data in self.data])

    def __add__(self, other):
        res = ''
        if len(self.data) == len(other.data):
            for line_1, line_2 in zip(self.data, other.data):
                if len(line_1) != len(line_2):
                    return 'Матрицы имеют различную размерность'

                sum_line = [x + y for x, y in zip(line_1, line_2)]
                res += ' '.join(map(str, sum_line)) + '\n'
        else:
            return 'Матрицы имеют различную размерность'
        return res


matrix_1 = Matrix([[31, 22], [37, 43], [51, 86]])
print(matrix_1)
matrix_2 = Matrix([[3, 5, 32], [2, 4, 6], [-1, 64, -8]])
print(matrix_2)
matrix_3 = Matrix([[21, 23, 29], [14, 15, 12], [35, 39, 31]])
print(matrix_2 + matrix_3)
